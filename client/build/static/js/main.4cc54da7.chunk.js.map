{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/NoMatch/NoMatch.js","utils/idb.js","utils/actions.js","components/AddItemForm/AddItemForm.js","utils/helpers.js","components/WishListItem/WishListItem.js","pages/WishList/WishList.js","components/ShoppingListItem/ShoppingListItem.js","pages/ShoppingList/ShoppingList.js","components/FriendCard/index.js","components/SecretListItem/SecretListItem.js","pages/SecretList/SecretList.js","components/AddWishListForm/AddWishListForm.js","utils/queries.js","pages/FriendsList/FriendsList.js","pages/Dashboard/Dashboard.js","pages/Home/Home.js","utils/reducers.js","utils/store.js","components/Button/index.js","components/Navbar/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["LOGIN_USER","gql","ADD_USER","ADD_WISHLIST","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","data","Auth","console","className","onSubmit","placeholder","type","id","onChange","Signup","username","addUser","NoMatch","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ADD_USER_AS_FRIEND","REMOVE_USER_AS_FRIEND","ADD_TO_WISHLIST","ADD_MULTIPLE_TO_WISHLIST","SORT_WISHLIST_ALPHABETICALLY","SORT_WISHLIST_PRICE_ASC","SORT_WISHLIST_PRICE_DESC","UPDATE_WISHLIST_ITEM","REMOVE_FROM_WISHLIST","ADD_TO_SECRET_LIST","ADD_MULTIPLE_TO_SECRET_LIST","SORT_SECRET_LIST_ALPHABETICALLY","SORT_SECRET_LIST_PRICE_ASC","SORT_SECRET_LIST_PRICE_DESC","UPDATE_SECRET_LIST_ITEM","REMOVE_FROM_SECRET_LIST","ADD_TO_SHOPPING_LIST","ADD_MULTIPLE_TO_SHOPPING_LIST","UPDATE_SHOPPING_LIST_ITEM","REMOVE_FROM_SHOPPING_LIST","AddItemForm","dispatch","useDispatch","link","price","specialNote","isClaimed","isClaimedBy","item","htmlFor","defaultValue","onBlur","rows","data-testid","formatUrl","url","replace","split","WishListItem","isEditing","setIsEditing","useSelector","state","wishlist","secretList","shoppingList","column","currentTarget","dataset","handleDelete","itemInWishlist","find","itemInShoppingList","html","data-column","onClick","itemInSecretList","handleSave","href","rel","WishList","addWishList","useEffect","getWishlist","items","length","sort","b","parseFloat","map","role","aria-label","ShoppingListItem","ShoppingList","getShoppingList","FriendCard","alt","src","image","removeFriend","SecretListItem","SecretList","filteredList","setFilteredList","isFiltering","setIsFiltering","minPrice","setMinPrice","maxPrice","setMaxPrice","getSecretList","idbSecretList","handleFilterChange","parseInt","priceFilteredList","filter","min","max","onFocus","AddWishListForm","month","day","year","thisYear","getFullYear","QUERY_USERNAME","FriendsList","searchedUsername","setSearchedUsername","firstName","lastName","foundUser","setFoundUser","useQuery","loading","class","friends","friend","Dashboard","wishlists","to","Home","initialState","reducer","action","newFriendsList","abcWishlist","priceAscWishlist","priceDescWishlist","newWishlist","abcSecretList","priceAscSecretList","priceDescSecretList","newSecretList","newShoppingList","createStore","__REDUX_DEVTOOLS_EXTENSION__","STYLES","SIZES","Button","children","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","Navbar","click","setClick","button","setButton","closeMobileMenu","showButton","innerWidth","addEventListener","loggedIn","logout","client","ApolloClient","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4cc54da7.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(username: $username, firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\nmutation addFriend($friendId: ID!) {\n  addFriend(friendId: $friendId) {\n    _id\n    firstName\n    lastName\n    username\n    friends {\n      _id\n      firstName\n      lastName\n      username\n    }\n  }\n}`\n\nexport const ADD_WISHLIST = gql`\nmutation addWishList($name: String!, $month: Int!, $day: Int!, $year: Int!, $items: [ItemInput]!){\n  addWishList(name: $name, month: $month, day: $day, year: $year, items: $items){\n    _id\n    name\n    month\n    day\n    year\n    items{\n      name\n      link\n      specialNote\n      price\n      isClaimed\n    }\n    }\n  }`","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst Login = props => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { \n          ...formState,\n          email: formState.email,\n          password: formState.password\n        }\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: ''\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Login failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState }\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n        // open connection to the database `wish-list` with the version of 1\n        const request = window.indexedDB.open('wish-list', 1);\n\n        // create variables to hold reference to the database, transaction (tx), and object store\n        let db, tx, store;\n\n        // if version has changed (or if this is the first time using the database), run this method and create the three object stores\n        request.onupgradeneeded = function (e) {\n            const db = request.result;\n\n            // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n\n            // example:\n            db.createObjectStore('wishlists', { keyPath: '_id'});\n            db.createObjectStore('wishlist', { keyPath: '_id' });\n            db.createObjectStore('secret list', { keyPath: '_id' });\n            db.createObjectStore('shopping list', { keyPath: '_id' });\n        };\n\n        // handle any errors with connecting\n        request.onerror = function (err) {\n            console.log('There was an error');\n            console.error(err);\n        };\n\n        // on database open success\n        request.onsuccess = function (e) {\n            // save a reference of the database to the `db` variable\n            db = request.result;\n            // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n            tx = db.transaction(storeName, 'readwrite');\n            // save a reference to that object store\n            store = tx.objectStore(storeName);\n\n            // in case of errors, let us know\n            db.onerror = function (err) {\n                console.log('error', err);\n            };\n\n            switch (method) {\n                case 'put':\n                    store.put(object);\n                    resolve(object);\n                    break;\n                case 'get':\n                    const all = store.getAll();\n                    all.onsuccess = function () {\n                        resolve(all.result);\n                    };\n                    break;\n                case 'delete':\n                    store.delete(object._id);\n                    break;\n                default:\n                    console.log('No valid method');\n                    break;\n            }\n\n            // when the transaction is complete, close the connection\n            tx.oncomplete = function () {\n                db.close();\n            };\n        }\n    });\n}","export const ADD_USER_AS_FRIEND = 'ADD_FRIEND';\nexport const REMOVE_USER_AS_FRIEND = 'REMOVE_FRIEND';\n\nexport const ADD_WISHLIST = 'ADD_WISHLIST';\nexport const ADD_TO_WISHLIST = 'ADD_TO_WISHLIST';\nexport const ADD_MULTIPLE_TO_WISHLIST = 'ADD_MULTIPLE_TO_WISHLIST';\nexport const SORT_WISHLIST_ALPHABETICALLY = 'SORT_WISHLIST_ALPHABETICALLY';\nexport const SORT_WISHLIST_PRICE_ASC = 'SORT_WISHLIST_PRICE_ASC';\nexport const SORT_WISHLIST_PRICE_DESC = 'SORT_WISHLIST_PRICE_DESC';\nexport const UPDATE_WISHLIST_ITEM = 'UPDATE_WISHLIST_ITEM';\nexport const REMOVE_FROM_WISHLIST = 'REMOVE_FROM_WISHLIST';\n\nexport const ADD_TO_SECRET_LIST = 'ADD_TO_SECRET_LIST';\nexport const ADD_MULTIPLE_TO_SECRET_LIST = 'ADD_MULTIPLE_TO_SECRET_LIST';\nexport const SORT_SECRET_LIST_ALPHABETICALLY = 'SORT_SECRET_LIST_ALPHABETICALLY';\nexport const SORT_SECRET_LIST_PRICE_ASC = 'SORT_SECRET_LIST_PRICE_ASC';\nexport const SORT_SECRET_LIST_PRICE_DESC = 'SORT_SECRET_LIST_PRICE_DESC';\nexport const UPDATE_SECRET_LIST_ITEM = 'UPDATE_SECRET_LIST_ITEM';\nexport const REMOVE_FROM_SECRET_LIST = 'REMOVE_FROM_SECRET_LIST';\n\nexport const ADD_TO_SHOPPING_LIST = 'ADD_TO_SHOPPING_LIST';\nexport const ADD_MULTIPLE_TO_SHOPPING_LIST = 'ADD_MULTIPLE_TO_SHOPPING_LIST';\nexport const UPDATE_SHOPPING_LIST_ITEM = 'UPDATE_SHOPPING_LIST_ITEM';\nexport const REMOVE_FROM_SHOPPING_LIST = 'REMOVE_FROM_SHOPPING_LIST';\n","import React, { useState } from \"react\";\nimport './add-item-form.css';\n\nimport { useDispatch } from 'react-redux'\nimport { idbPromise } from \"../../utils/idb\";\nimport { ADD_TO_SECRET_LIST, ADD_TO_WISHLIST } from \"../../utils/actions\";\n\nconst AddItemForm = () => {\n    const dispatch = useDispatch();\n\n    const [formState, setFormState]\n        = useState({\n            _id: '',\n            name: '',\n            link: '',\n            price: '',\n            specialNote: '',\n            isClaimed: false,\n            isClaimedBy: ''\n        });\n    let {\n        _id,\n        name,\n        link,\n        price,\n        specialNote,\n        isClaimed,\n        isClaimedBy\n    } = formState;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(formState);\n\n        dispatch({\n            type: ADD_TO_WISHLIST,\n            item: { ...formState }\n        });\n        idbPromise('wishlist', 'put', {\n            ...formState,\n            isClaimed: isClaimed,\n            isClaimedBy: isClaimedBy\n        });\n\n        dispatch({\n            type: ADD_TO_SECRET_LIST,\n            item: { ...formState }\n        });\n        idbPromise('secret list', 'put', {\n            ...formState,\n            isClaimed: isClaimed,\n            isClaimedBy: isClaimedBy\n        });\n\n        // setFormState({\n        //     _id: '',\n        //     name: '',\n        //     link: '',\n        //     price: '',\n        //     specialNote: '',\n        // });\n    };\n\n    const handleChange = e => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    return (\n        <section>\n            <h2>Add an Item</h2>\n            <form\n                id='add-item-form'\n                onSubmit={handleSubmit}\n            >\n\n\n                {/* ================= FOR TESTING ONLY ================ */}\n                <div className=\"form-input\">\n                    <label htmlFor=\"_id\">ID:</label>\n                    <input\n                        type=\"text\"\n                        name=\"_id\"\n                        defaultValue={_id}\n                        onBlur={handleChange}\n                    />\n                </div>\n                {/* =================================================== */}\n\n                <div className=\"form-input\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        defaultValue={name}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"link\">Link:</label>\n                    <input\n                        type=\"text\"\n                        name=\"link\"\n                        defaultValue={link}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"price\">Price: $</label>\n                    <input\n                        type=\"number\"\n                        name=\"price\"\n                        defaultValue={`$${price}`}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"specialNote\">Special Notes:</label>\n                    <textarea\n                        name=\"specialNote\"\n                        rows=\"5\"\n                        defaultValue={specialNote}\n                        onBlur={handleChange}\n                    />\n                </div>\n\n                <button type=\"submit\" data-testid=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </section>\n    );\n};\n\nexport default AddItemForm;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function formatUrl(url) {\n  return url\n    .replace(\"http://\", \"\")\n    .replace(\"https://\", \"\")\n    .replace(\"www.\", \"\")\n    .split(\"/\")[0]\n    .split(\"?\")[0];\n}\n\n","import React, { useState } from \"react\";\nimport ContentEditable from 'react-contenteditable';\nimport './wishlist-item.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    UPDATE_WISHLIST_ITEM,\n    UPDATE_SECRET_LIST_ITEM,\n    UPDATE_SHOPPING_LIST_ITEM,\n    REMOVE_FROM_WISHLIST,\n    REMOVE_FROM_SECRET_LIST,\n    REMOVE_FROM_SHOPPING_LIST\n} from '../../utils/actions';\nimport { formatUrl } from '../../utils/helpers';\n\nconst WishListItem = ({ item }) => {\n    let {\n        _id,\n        name,\n        price,\n        link,\n        specialNote\n    } = item;\n    const [isEditing, setIsEditing] = useState(false);\n    const { wishlist, secretList, shoppingList } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const {\n            currentTarget: {\n                dataset: { column },\n            },\n            target: { value }\n        } = e;\n\n        item = {\n            ...item,\n            [column]: value\n        };\n    };\n\n    const handleEdit = () => {\n        console.log(`editing ${name}...`)\n        setIsEditing(true);\n    }\n\n    const handleSave = (id) => {\n        const itemInWishlist = wishlist.find(item => item._id === id);\n        const itemInSecretList = secretList.find(item => item._id === id);\n        const itemInShoppingList = shoppingList.find(item => item._id === id);\n\n        // update item in wishlist\n        if (itemInWishlist) {\n            dispatch({\n                type: UPDATE_WISHLIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('wishlist', 'put', {\n                ...item\n            });\n        }\n\n        // update item in secret list\n        if (itemInSecretList) {\n            dispatch({\n                type: UPDATE_SECRET_LIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('secret list', 'put', {\n                ...item\n            });\n        }\n\n        // update item in shopping list\n        if (itemInShoppingList) {\n            dispatch({\n                type: UPDATE_SHOPPING_LIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('shopping list', 'put', {\n                ...item\n            });\n        }\n\n        setIsEditing(false);\n    }\n\n    const handleDelete = (id) => {\n        const itemInWishlist = wishlist.find(item => item._id === id);\n        const itemInShoppingList = shoppingList.find(item => item._id === id);\n\n        // remove from wishlist and secret list\n        if (itemInWishlist) {\n            dispatch({\n                type: REMOVE_FROM_WISHLIST,\n                item: { ...itemInWishlist }\n            });\n            idbPromise('wishlist', 'delete', {\n                ...itemInWishlist\n            });\n\n            dispatch({\n                type: REMOVE_FROM_SECRET_LIST,\n                item: { ...itemInWishlist }\n            });\n            idbPromise('secret list', 'delete', {\n                ...itemInWishlist\n            });\n        }\n\n        // remove from shopping list\n        if (itemInShoppingList) {\n            dispatch({\n                type: REMOVE_FROM_SHOPPING_LIST,\n                item: { ...itemInShoppingList }\n            });\n            idbPromise('shopping list', 'delete', {\n                ...itemInShoppingList\n            });\n        }\n\n        console.log(`${name} deleted!`)\n    };\n\n    if (isEditing) {\n        return (\n            <div className=\"container\">\n                <div className=\"wishlist-item\">\n\n                    <strong>\n                        <ContentEditable\n                            html={name}\n                            data-column='name'\n                            className='content-editable'\n                            onChange={handleChange}\n                        />\n                    </strong>\n\n                    <strong>\n                        <span>$\n                        <ContentEditable\n                                html={`${price}`}\n                                data-column='price'\n                                className='content-editable'\n                                onChange={handleChange}\n                            />\n                        </span>\n                    </strong>\n\n                    <ContentEditable\n                        html={link}\n                        data-column='link'\n                        className='content-editable'\n                        onChange={handleChange}\n                    />\n\n                    <ContentEditable\n                        html={specialNote}\n                        data-column='specialNote'\n                        className='content-editable'\n                        onChange={handleChange}\n                    />\n\n                    <div>\n                        <button onClick={() => handleSave(_id)}>Save</button>\n                        <button onClick={() => handleDelete(_id)}>Delete</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"wishlist-item\">\n\n                <h3>{name}</h3>\n\n                <h4>${price}</h4>\n\n                <a href={link} target='_blank' rel='noreferrer' className='item-link'>{formatUrl(link)}</a>\n\n                <p>{specialNote}</p>\n\n                <div>\n                    <button onClick={handleEdit}>Edit</button>\n                    <button onClick={() => handleDelete(_id)}>Delete</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WishListItem;","import React, { useEffect } from \"react\";\nimport './wishlist.css';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_WISHLIST } from '../../utils/mutations';\n\nimport AddItemForm from '../../components/AddItemForm/AddItemForm';\nimport WishListItem from '../../components/WishListItem/WishListItem';\n\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    ADD_MULTIPLE_TO_WISHLIST,\n    SORT_WISHLIST_ALPHABETICALLY,\n    SORT_WISHLIST_PRICE_ASC,\n    SORT_WISHLIST_PRICE_DESC\n} from \"../../utils/actions\";\n\n\nconst WishList = () => {\n    const [addWishList] = useMutation(ADD_WISHLIST);\n    const state = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getWishlist = async () => {\n            const wishlist = await idbPromise('wishlist', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_WISHLIST,\n                items: [...wishlist]\n            });\n        }\n\n        if (!state.wishlist.length) {\n            getWishlist();\n        }\n    }, [addWishList, state.wishlist.length, dispatch]);\n\n    const sortAlphabetically = () => {\n        state.wishlist.sort((a, b) => {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n        });\n\n        dispatch({\n            type: SORT_WISHLIST_ALPHABETICALLY,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    const sortPriceAscending = () => {\n        state.wishlist.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n\n        dispatch({\n            type: SORT_WISHLIST_PRICE_ASC,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    const sortPriceDescending = () => {\n        state.wishlist.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n\n        dispatch({\n            type: SORT_WISHLIST_PRICE_DESC,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    return (\n        <div className=\"container\">\n\n            {/* ======= FOR TESTING ONLY ========================== */}\n            <h2 className='text-green'>Wishlist</h2>\n            {/* ==================================================== */}\n\n\n            <AddItemForm />\n\n\n            {state.wishlist.length ? (\n                <div>\n                    <button onClick={sortAlphabetically}>Sort Alphabetically</button>\n                    <button onClick={sortPriceAscending}>Sort Price Asc</button>\n                    <button onClick={sortPriceDescending}>Sort Price Desc</button>\n\n                    {state.wishlist.map(item => (\n                        <WishListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <span role='img' aria-label='gift'>\n                        🎁\n                            </span>\n                            Add items to your wishlist if you want gifts\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default WishList;","import React from \"react\";\nimport './shopping-list-item.css';\n\nimport { formatUrl } from '../../utils/helpers';\n\nconst ShoppingListItem = ({ item }) => {\n    const {\n        name,\n        price,\n        link,\n        specialNote\n    } = item;\n\n    return (\n        <div className=\"container\">\n            <div className=\"wishlist-item\">\n                <h3>\n                    {name}\n                    <span> ${price}</span>\n                </h3>\n                <a href={link}>{formatUrl(link)}</a>\n                <p>{specialNote}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ShoppingListItem;","import React, { useEffect } from \"react\";\nimport './shopping-list.css';\n\nimport ShoppingListItem from \"../../components/ShoppingListItem/ShoppingListItem\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport { ADD_MULTIPLE_TO_SHOPPING_LIST } from \"../../utils/actions\";\n\nconst ShoppingList = () => {\n    const state = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getShoppingList = async () => {\n            const shoppingList = await idbPromise('shopping list', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_SHOPPING_LIST,\n                items: [...shoppingList]\n            });\n        }\n\n        if (!state.shoppingList.length) {\n            getShoppingList();\n        }\n    }, [state.shoppingList.length, dispatch]);\n\n    \n\n    return (\n        <div className=\"container\">\n\n    {/* ======= FOR TESTING ONLY ========================== */}\n                <h2 className='text-green'>Shopping List</h2>\n    {/* ==================================================== */}\n\n                        \n            {state.shoppingList.length ? (\n                <div>\n                    {state.shoppingList.map(item => (\n                        <ShoppingListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <span role='img' aria-label='relief'>\n                        😌\n                    </span>\n                    Feels good to have the shopping done...\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default ShoppingList;\n","import React from 'react';\nimport './style.css';\n\n// Props are passed through our functional component.\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Username:</strong> {props.username}\n          </li>\n        </ul>\n      </div>\n      {/* The onClick method will invoke the removeFriends function passing through the value of props.id  */}\n      <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        𝘅\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport './secret-list-item.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport { ADD_TO_SHOPPING_LIST, UPDATE_SECRET_LIST_ITEM } from '../../utils/actions';\nimport { formatUrl } from '../../utils/helpers';\n\nconst SecretListItem = ({ item }) => {\n    const state = useSelector(state => state);\n    const { shoppingList } = state;\n    const dispatch = useDispatch();\n    let {\n        _id,\n        name,\n        price,\n        link,\n        specialNote,\n        isClaimed,\n        isClaimedBy\n    } = item;\n\n    const handleClaimGift = () => {\n        const itemInShoppingList = shoppingList.find(item => item._id === _id);\n\n        if (itemInShoppingList) return;\n        else {\n            isClaimed = true;\n    // --- CHANGE TO FRIEND'S USERNAME ---------\n            isClaimedBy = 'Me';\n    // ---------------------------------------\n\n            dispatch({\n                type: ADD_TO_SHOPPING_LIST,\n                item: {\n                    ...item,\n                    isClaimed: isClaimed,\n                    isClaimedBy: isClaimedBy\n                }\n            });\n\n            idbPromise('shopping list', 'put', {\n                ...item,\n                isClaimed: isClaimed,\n                isClaimedBy: isClaimedBy\n            });\n\n            dispatch({\n                type: UPDATE_SECRET_LIST_ITEM,\n                item: {\n                    ...item,\n                    isClaimed: isClaimed,\n                    isClaimedBy: isClaimedBy\n                }\n            });\n\n            idbPromise('secret list', 'put', {\n                ...item,\n                isClaimed: isClaimed,\n                isClaimedBy: isClaimedBy\n            });\n        }\n    };\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"secret-list-item\">\n                <h3>\n                    {name}\n                    <span> ${price}</span>\n                </h3>\n                <a href={link}>{formatUrl(link)}</a>\n                <p>{specialNote}</p>\n\n                {/* ======= COME BACK TO THIS WHEN FRIEND FUNCTIONALITY IN PLACE ====== */}\n                {isClaimed ? (\n                    <div>\n                        Claimed by: {isClaimedBy}\n                    </div>\n                ) : (\n                    <div>\n                        <button\n                            id=\"claim-gift\"\n                            onClick={handleClaimGift}\n                        >\n                            Claim Gift\n                        </button>\n                    </div>\n                )}\n                {/* =================================================================== */}\n\n            </div>\n        </div>\n    );\n};\n\nexport default SecretListItem;","import React, { useState, useEffect } from \"react\";\nimport './secret-list.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    ADD_MULTIPLE_TO_SECRET_LIST,\n    SORT_SECRET_LIST_ALPHABETICALLY,\n    SORT_SECRET_LIST_PRICE_ASC,\n    SORT_SECRET_LIST_PRICE_DESC\n} from \"../../utils/actions\";\n\nimport SecretListItem from '../../components/SecretListItem/SecretListItem';\n\nconst SecretList = () => {\n    // getting the secret list\n    const state = useSelector(state => state);\n\n    const dispatch = useDispatch();\n\n    // if filtering, we'll render a filtered list\n    const [filteredList, setFilteredList] = useState(state.secretList);\n    const [isFiltering, setIsFiltering] = useState(false);\n    // parameters for filtering\n    const [minPrice, setMinPrice] = useState(0);\n    const [maxPrice, setMaxPrice] = useState(500);\n\n    useEffect(() => {\n        const getSecretList = async () => {\n            // this will get secret list if offline\n            const idbSecretList = await idbPromise('secret list', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_SECRET_LIST,\n                items: [...idbSecretList]\n            });\n        }    \n\n        if (!state.secretList.length) {\n            getSecretList();\n        }\n    }, [state.secretList.length, dispatch]);\n\n    const handleFilterChange = e => {\n        setFilteredList(state.secretList);\n        setIsFiltering(true);\n\n        let {\n            currentTarget: {\n                dataset: { column },\n            },\n            target: { value }\n        } = e;\n\n        if (column === 'minPrice') setMinPrice(parseInt(value));\n        if (column === 'maxPrice') setMaxPrice(parseInt(value));\n\n        const priceFilteredList = state.secretList.filter(item => {\n            return item.price >= minPrice && item.price <= maxPrice;\n        });\n\n        setFilteredList(priceFilteredList);\n    };\n\n    // reset filters\n    const stopFiltering = () => {\n        setIsFiltering(false);\n        setMinPrice(0);\n        setMaxPrice(500);\n        setFilteredList(state.secretList);\n    };\n\n    const sortAlphabetically = () => {\n        filteredList.sort((a, b) => {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n        });\n        \n        dispatch({\n            type: SORT_SECRET_LIST_ALPHABETICALLY,\n            wishlist: [filteredList]\n        });    \n    };\n\n    const sortPriceAscending = () => {\n        filteredList.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n\n        dispatch({\n            type: SORT_SECRET_LIST_PRICE_ASC,\n            wishlist: [filteredList]\n        });    \n    };\n\n    const sortPriceDescending = () => {\n        filteredList.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n\n        dispatch({\n            type: SORT_SECRET_LIST_PRICE_DESC,\n            wishlist: [filteredList]\n        });    \n    };\n\n\n    // const chooseRandomGift = () => {\n    //     setIsFiltering(true)\n\n    //     console logs before and after the filter function return the same filteredList\n        \n    //     setFilteredList(secretList);\n    //     console.log(filteredList);\n    //     setFilteredList(secretList.filter(item => item.price >= minPrice && item.price <= maxPrice));\n    //     console.log(filteredList);\n\n    //     random function\n        \n    //     const randomGift = filteredList[Math.floor(Math.random() * filteredList.length)];\n    //     console.log(randomGift);\n\n    //     array with only randomGift inside\n\n    //     setFilteredList([randomGift]);\n    // };\n\n    return (\n        <div className=\"container\">\n\n            {/* ======= FOR TESTING ONLY ========================== */}\n            <h2 className='text-green'>Secret List</h2>\n            {/* ==================================================== */}\n\n            <div>\n                <label htmlFor='minPrice'>Min Price: $</label>\n                <input\n                    type='number'\n                    min='0'\n                    max={maxPrice}\n                    name='minPrice'\n                    data-column='minPrice'\n                    value={minPrice}\n                    onChange={handleFilterChange}\n                    onFocus={handleFilterChange}\n                    onBlur={handleFilterChange}\n                />\n            </div>\n            <div>\n                <label htmlFor='maxPrice'>Max Price: $</label>\n                <input\n                    type='number'\n                    min={minPrice}\n                    name='maxPrice'\n                    data-column='maxPrice'\n                    value={maxPrice}\n                    onChange={handleFilterChange}\n                    onFocus={handleFilterChange}\n                    onBlur={handleFilterChange}\n                />\n            </div>\n            <button onClick={stopFiltering}>Clear Filters</button>\n            {/* <button onClick={chooseRandomGift}>Select Random Gift!</button> */}\n\n            <button onClick={sortAlphabetically}>Sort Alphabetically</button>\n            <button onClick={sortPriceAscending}>Sort Price Asc</button>\n            <button onClick={sortPriceDescending}>Sort Price Desc</button>\n\n\n            {isFiltering ? (\n                // if isFiltering render this\n                <div>\n                    {filteredList.map(item => (\n                        <SecretListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                // else render this\n                <div>\n                    {\n                        state.secretList.length ? (\n                            <div>\n                                {state.secretList.map(item => (\n                                    <SecretListItem key={item._id} item={item} />\n                                ))}\n                            </div>\n                        ) : (\n                            <div>\n                                This user has everything they want!\n                                <span role='img' aria-label='smiley'>\n                                    😃\n                                </span>\n                            </div>\n                        )\n                    }\n                </div>\n            )}\n\n\n        </div>\n    );\n};\n\nexport default SecretList;\n","import React, { useState } from \"react\";\nimport './add-wishlist-form.css';\n\nimport { useDispatch } from 'react-redux'\nimport { idbPromise } from \"../../utils/idb\";\nimport { ADD_WISHLIST } from \"../../utils/actions\";\n\nconst AddWishListForm = () => {\n    const dispatch = useDispatch();\n\n    const [formState, setFormState]\n        = useState({\n            _id: '',\n            name: '',\n            month: '',\n            day: '',\n            year: '',\n            items: []\n        });\n    let {\n        _id,\n        name,\n        month,\n        day,\n        year,\n        items\n    } = formState;\n\n    const date = new Date();\n    const thisYear = date.getFullYear();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(formState);\n\n        dispatch({\n            type: ADD_WISHLIST,\n            item: { ...formState }\n        });\n        idbPromise('wishlists', 'put', {\n            ...formState,\n            items: items\n        });\n    };\n\n    const handleChange = e => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    return (\n        <section>\n            <h2>Add a Wishlist</h2>\n            <form\n                id='add-wishlist-form'\n                onSubmit={handleSubmit}\n            >\n\n\n                {/* ================= FOR TESTING ONLY ================ */}\n                <div className=\"form-input\">\n                    <label htmlFor=\"_id\">ID:</label>\n                    <input\n                        type=\"text\"\n                        name=\"_id\"\n                        defaultValue={_id}\n                        onBlur={handleChange}\n                    />\n                </div>\n                {/* =================================================== */}\n\n                <div className=\"form-input\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        defaultValue={name}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"month\">Month:</label>\n                    <input\n                        type=\"number\"\n                        name=\"month\"\n                        min='1'\n                        max='12'\n                        defaultValue={month}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"day\">Day:</label>\n                    <input\n                        type=\"number\"\n                        name=\"day\"\n                        min='1'\n                        max='31'\n                        defaultValue={day}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"year\">Year:</label>\n                    <input\n                        type=\"number\"\n                        name=\"year\"\n                        min={thisYear}\n                        defaultValue={year}\n                        onBlur={handleChange}\n                    />\n                </div>\n\n                <button type=\"submit\" data-testid=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </section>\n    );\n};\n\nexport default AddWishListForm;","import gql from 'graphql-tag';\n\nexport const QUERY_USER = gql`\n{\n    user {\n    _id\n    username\n    email\n    friends{\n      _id\n      firstName\n    }\n    lists{\n      _id\n      name\n      items{\n        _id\n        name\n        link\n      }\n    }\n  }\n}\n`;\n\nexport const QUERY_USERS = gql`\n  {\n    users {\n      _id\n      username\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n\nexport const QUERY_USERNAME = gql`\n  query ($username: String!) {\n    username (username: $username) {\n      _id\n      username\n      firstName\n      lastName\n      email\n    }\n  }\n`","import React, { useState } from \"react\";\nimport './friends-list.css';\nimport FriendCard from '../../components/FriendCard';\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USERNAME } from '../../utils/queries';\nimport { ADD_FRIEND } from '../../utils/mutations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_USER_AS_FRIEND, REMOVE_USER_AS_FRIEND } from '../../utils/actions';\n\nconst FriendsList = () => {\n    const state = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    let userObj = {\n        username: '',\n        firstName: '',\n        lastName: '',\n        email: ''\n    }\n    const [searchedUsername, setSearchedUsername] = useState('')\n    // const [users, setUsers] = useState([]);\n    const [foundUser, setFoundUser] = useState(userObj);\n    const { loading, data } = useQuery(QUERY_USERNAME, {\n        variables: { username: searchedUsername }\n    });\n\n    const handleChange = e => {\n        console.log(e.target.value);\n        setSearchedUsername(e.target.value)\n    }\n\n    const handleSearch = e => {\n        e.preventDefault();\n\n        if (data) {\n            setFoundUser(data.username);\n        } else {\n            console.log('no data');\n        }\n    }\n\n    const addFriend = () => {\n        console.log(foundUser.username);\n    }\n\n    // if (loading) return <div>loading...</div>;\n\n    return (\n        <div className=\"container\">\n\n            <form id='friend-search' onSubmit={handleSearch}>\n                <label htmlFor='username'>Username:</label>\n                <input\n                    className='searchbar'\n                    type='text'\n                    name='username'\n                    placeholder='Find friends here...'\n                    value={searchedUsername}\n                    onChange={handleChange}\n                />\n                <button type='submit'>\n                    <i class=\"fas fa-search\"></i>\n                </button>\n            </form>\n\n            {foundUser.username.length ? (\n                <div>\n                    <p>{foundUser.username}</p>\n                    <p>{foundUser.firstName}</p>\n                    <p>{foundUser.lastName}</p>\n                    <p>{foundUser.email}</p>\n                    <button onClick={addFriend} type='button'>Add Friend</button>\n                </div>\n            ) : (\n                <div />\n            )}\n\n{/* {users.length ? (\n                <div>\n                    {users.map(user => {\n                        <div>\n                            {user.username}\n                            {user.firstName}\n                            {user.lastName}\n                            {user.email}\n                        </div>\n                    })}\n                </div>\n            ) : (\n                <div></div>\n            )} */}\n\n{\n    state.friends.length ? (\n        <div>\n            {state.friends.map(friend => {\n                <button className='' key={friend._id}>\n                    <FriendCard friend={friend} />\n                </button>\n            })}\n        </div>\n    ) : (\n    <div></div>\n)\n}\n\n        </div >\n    );\n};\n\nexport default FriendsList;\n","import React from \"react\";\nimport './dashboard.css';\nimport { Link } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nimport AddWishListForm from '../../components/AddWishListForm/AddWishListForm';\nimport WishList from '../WishList/WishList';\n\nconst Dashboard = () => {\n    const wishlists = useSelector(state => state.wishlists);\n\n    if (!wishlists) return <div><AddWishListForm /></div>;\n\n    return (\n        <div className=\"container\">\n\n            {wishlists && \n                wishlists.map(wishlist => (\n                    <div>\n                        <Link\n                            to={`/wishlist/${wishlist._id}`}\n                        >\n                            {wishlist.name}\n                        </Link>\n                    </div>\n                ))\n            }\n\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React from \"react\";\n\nimport SecretList from '../SecretList/SecretList';\nimport ShoppingList from \"../ShoppingList/ShoppingList\";\nimport AddWishListForm from \"../../components/AddWishListForm/AddWishListForm\";\nimport FriendsList from \"../FriendsList/FriendsList\";\nimport Dashboard from \"../Dashboard/Dashboard\";\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n\n\n            {/* =============== FOR TESTING PURPOSES ================= */}\n            <AddWishListForm />\n            ======================================================================\n            <Dashboard />\n            ======================================================================\n            <FriendsList />\n            ======================================================================\n            <SecretList />\n            ======================================================================\n            <ShoppingList />\n            {/* ====================================================== */}\n\n\n        </div>\n    );\n};\n\nexport default Home;\n","import {\n    ADD_USER_AS_FRIEND,\n    REMOVE_USER_AS_FRIEND,\n\n    ADD_WISHLIST,\n    ADD_TO_WISHLIST,\n    ADD_MULTIPLE_TO_WISHLIST,\n    SORT_WISHLIST_ALPHABETICALLY,\n    SORT_WISHLIST_PRICE_ASC,\n    SORT_WISHLIST_PRICE_DESC,\n    UPDATE_WISHLIST_ITEM,\n    REMOVE_FROM_WISHLIST,\n\n    ADD_TO_SECRET_LIST,\n    ADD_MULTIPLE_TO_SECRET_LIST,\n    SORT_SECRET_LIST_ALPHABETICALLY,\n    SORT_SECRET_LIST_PRICE_ASC,\n    SORT_SECRET_LIST_PRICE_DESC,\n    UPDATE_SECRET_LIST_ITEM,\n    REMOVE_FROM_SECRET_LIST,\n\n    ADD_TO_SHOPPING_LIST,\n    ADD_MULTIPLE_TO_SHOPPING_LIST,\n    UPDATE_SHOPPING_LIST_ITEM,\n    REMOVE_FROM_SHOPPING_LIST\n} from './actions';\n\nconst initialState = {\n    friends: [],\n    wishlists: [],\n    wishlist: [],\n    secretList: [],\n    shoppingList: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // ================ FRIEND CASES START ==================================================\n        case ADD_USER_AS_FRIEND:\n            return {\n                ...state,\n                friends: [...state.friends, action.friend]\n            };\n\n        case REMOVE_USER_AS_FRIEND:\n            const newFriendsList = state.friends.filter(friend => {\n                return friend._id !== action._id;\n            });\n\n            return {\n                ...state,\n                friends: newFriendsList\n            }\n        // =============== FRIEND CASES END =====================================================\n\n        // ============ WISHLIST CASES START ===================================================\n        case ADD_WISHLIST:\n            return {\n                ...state,\n                wishlists: [...state.wishlists, action.wishlist]\n            };\n        \n        case ADD_TO_WISHLIST:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_WISHLIST:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, ...action.items]\n            };\n        \n        case SORT_WISHLIST_ALPHABETICALLY:\n            let abcWishlist = state.wishlist.sort((a, b) => {\n                if (a.name < b.name) return -1;\n                if (a.name > b.name) return 1;\n                return 0;\n            });\n\n            return {\n                ...state,\n                wishlist: abcWishlist\n            }\n\n        case SORT_WISHLIST_PRICE_ASC:\n            let priceAscWishlist = state.wishlist.sort((a, b) => {\n                return parseFloat(a.price) - parseFloat(b.price);\n            });\n\n            return {\n                ...state,\n                wishlist: priceAscWishlist\n            };\n\n        case SORT_WISHLIST_PRICE_DESC:\n            let priceDescWishlist = state.wishlist.sort((a, b) => {\n                return parseFloat(b.price) - parseFloat(a.price);\n            });\n\n            return {\n                ...state,\n                wishlist: priceDescWishlist\n            };\n\n        case UPDATE_WISHLIST_ITEM:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, action.item]\n            };\n\n        case REMOVE_FROM_WISHLIST:\n            let newWishlist = state.wishlist.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                wishlist: newWishlist\n            };\n        // ============ WISHLIST CASES END =======================================================\n\n        // ============= SECRET LIST CASES START =====================================================\n        case ADD_TO_SECRET_LIST:\n            return {\n                ...state,\n                secretList: [...state.secretList, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_SECRET_LIST:\n            return {\n                ...state,\n                secretList: [...action.items]\n            };\n\n        case SORT_SECRET_LIST_ALPHABETICALLY:\n            let abcSecretList = state.secretList.sort((a, b) => {\n                if (a.name < b.name) return -1;\n                if (a.name > b.name) return 1;\n                return 0;\n            });\n\n            return {\n                ...state,\n                secretList: abcSecretList\n            }\n\n        case SORT_SECRET_LIST_PRICE_ASC:\n            let priceAscSecretList = state.secretList.sort((a, b) => {\n                return parseFloat(a.price) - parseFloat(b.price);\n            });\n\n            return {\n                ...state,\n                secretList: priceAscSecretList\n            };\n\n        case SORT_SECRET_LIST_PRICE_DESC:\n            let priceDescSecretList = state.secretList.sort((a, b) => {\n                return parseFloat(b.price) - parseFloat(a.price);\n            });\n\n            return {\n                ...state,\n                secretList: priceDescSecretList\n            };\n\n        case UPDATE_SECRET_LIST_ITEM:\n            return {\n                ...state,\n                secretList: [...state.secretList, action.item]\n            };\n\n        case REMOVE_FROM_SECRET_LIST:\n            let newSecretList = state.secretList.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                secretList: newSecretList\n            };\n        // ============ SECRET LIST CASES END =======================================================\n\n        // =========== SHOPPING LIST CASES START =================================================\n        case ADD_TO_SHOPPING_LIST:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_SHOPPING_LIST:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, ...action.items]\n            };\n\n        case UPDATE_SHOPPING_LIST_ITEM:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, action.item]\n            };\n\n        case REMOVE_FROM_SHOPPING_LIST:\n            let newShoppingList = state.shoppingList.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                shoppingList: newShoppingList\n            };\n        // =========== SHOPPING LIST CASES END ========================================================\n\n        // if it's none of these actions, do not update the state at all and keep things the same!\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n  \nexport default store;","import React from 'react';\nimport './css/style.css';\nimport {Link} from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to='/Signup' className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n\n  );\n\n};","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/style.css';\nimport { Button } from '../Button';\nimport Auth from '../../utils/auth';\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const logout = event => {\n        event.preventDefault();\n        Auth.logout();\n      };\n\n    const showButton = () => {\n        if(window.innerWidth <= 960) {\n            setButton(false)\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className = \"navbar\">\n                <div className = \"navbar-container\">\n                    <Link to ='/' className = \"navbar-logo\" onClick = {closeMobileMenu}>\n                        Wish-List &nbsp;\n                        <i class=\"fas fa-gift\"/>\n                    </Link>\n                    <div className = \"menu-icon\" onClick = {handleClick}>\n                        <i className = {click ? 'fas fa-times' : 'fas fa-bars'} />\n                    </div>\n\n                    {Auth.loggedIn() ? (\n                        <>\n                        <ul className = {click ? 'nav-menu active' : 'nav-menu'}>\n                        <Link to=\"/wishlist\" className = 'nav-links' onClick = {closeMobileMenu}> \n                            DashBoard\n                        </Link>\n                        <Link to=\"/shoppinglist\" className = 'nav-links' onClick = {closeMobileMenu}> \n                            Shopping\n                        </Link>\n                        <Link to=\"/friendcard\" className = 'nav-links' onClick = {closeMobileMenu}> \n                            Friends\n                        </Link>\n                        <Link to=\"/Home\" className = 'nav-links' onClick = {closeMobileMenu}> \n                        <a onClick={logout}>\n                            Logout\n                        </a>\n                        </Link>\n                        </ul>\n                        </>\n                    ) : (\n                        <>\n                    <ul className = {click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className = 'nav-item'>\n                            <Link to ='../Login' className = 'nav-links' onClick = {closeMobileMenu}>\n                                Login\n                            </Link>\n                            <Link to ='../Signup' className = 'nav-links-mobile' onClick = {closeMobileMenu}>\n                                SignUp\n                            </Link>\n                        </li>\n                    </ul>\n                    {button && <Button buttonStyle = 'btn--outline'> SIGNUP </Button>}\n                        </>\n                    )}\n                    \n                </div>\n\n            </nav>\n        </>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n\nimport Login from './pages/Login/Login';\nimport Signup from './pages/Signup/Signup';\nimport NoMatch from './pages/NoMatch/NoMatch';\nimport WishList from './pages/WishList/WishList';\nimport ShoppingList from './pages/ShoppingList/ShoppingList';\nimport FriendCard from './components/FriendCard/index';\n\nimport Home from \"./pages/Home/Home\";\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\nimport Navbar from './components/Navbar';\n\n\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem('id_token');\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n  },\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/wishlist\" component={WishList} /> \n                <Route exact path=\"/shoppinglist\" component={ShoppingList} />\n                <Route exact path=\"/friendcard\" component={FriendCard} />\n                <Route component={NoMatch} />\n              </Switch>\n          </div>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();"],"sourceRoot":""}