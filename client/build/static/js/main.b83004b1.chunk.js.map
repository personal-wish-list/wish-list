{"version":3,"sources":["utils/idb.js","utils/actions.js","components/AddItemForm/AddItemForm.js","utils/helpers.js","components/WishListItem/WishListItem.js","pages/WishList/WishList.js","components/SecretListItem/SecretListItem.js","pages/SecretList/SecretList.js","components/ShoppingListItem/ShoppingListItem.js","pages/ShoppingList/ShoppingList.js","pages/Home/Home.js","utils/reducers.js","utils/store.js","components/Button/index.js","components/Navbar/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","err","console","log","error","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ADD_TO_WISHLIST","ADD_MULTIPLE_TO_WISHLIST","SORT_WISHLIST_ALPHABETICALLY","SORT_WISHLIST_PRICE_ASC","SORT_WISHLIST_PRICE_DESC","UPDATE_WISHLIST_ITEM","REMOVE_FROM_WISHLIST","ADD_TO_SECRET_LIST","ADD_MULTIPLE_TO_SECRET_LIST","UPDATE_SECRET_LIST_ITEM","REMOVE_FROM_SECRET_LIST","ADD_TO_SHOPPING_LIST","ADD_MULTIPLE_TO_SHOPPING_LIST","UPDATE_SHOPPING_LIST_ITEM","REMOVE_FROM_SHOPPING_LIST","AddItemForm","dispatch","useDispatch","useState","name","link","price","specialNote","isClaimed","isClaimedBy","formState","setFormState","handleChange","target","value","id","onSubmit","preventDefault","type","item","className","htmlFor","defaultValue","onBlur","rows","data-testid","formatUrl","url","replace","split","WishListItem","isEditing","setIsEditing","useSelector","state","wishlist","secretList","shoppingList","column","currentTarget","dataset","handleDelete","itemInWishlist","find","itemInShoppingList","html","data-column","onChange","onClick","itemInSecretList","handleSave","href","rel","WishList","useEffect","getWishlist","a","items","length","sort","b","parseFloat","map","role","aria-label","SecretListItem","SecretList","filteredList","setFilteredList","isFiltering","setIsFiltering","minPrice","setMinPrice","maxPrice","setMaxPrice","getSecretList","idbSecretList","handleFilterChange","parseInt","priceFilteredList","filter","chooseRandomGift","randomGift","Math","floor","random","min","max","onFocus","ShoppingListItem","ShoppingList","getShoppingList","Home","initialState","reducer","action","abcWishlist","priceAscWishlist","priceDescWishlist","newWishlist","newSecretList","newShoppingList","createStore","__REDUX_DEVTOOLS_EXTENSION__","STYLES","SIZES","Button","children","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","Navbar","click","setClick","button","setButton","closeMobileMenu","showButton","innerWidth","addEventListener","class","client","ApolloClient","operation","token","localStorage","getItem","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b83004b1.chunk.js","sourcesContent":["export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n        // open connection to the database `wish-list` with the version of 1\n        const request = window.indexedDB.open('wish-list', 1);\n\n        // create variables to hold reference to the database, transaction (tx), and object store\n        let db, tx, store;\n\n        // if version has changed (or if this is the first time using the database), run this method and create the three object stores\n        request.onupgradeneeded = function (e) {\n            const db = request.result;\n\n            // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n\n            // example:\n            db.createObjectStore('wishlist', { keyPath: '_id' });\n            db.createObjectStore('secret list', { keyPath: '_id' });\n            db.createObjectStore('shopping list', { keyPath: '_id' });\n        };\n\n        // handle any errors with connecting\n        request.onerror = function (err) {\n            console.log('There was an error');\n            console.error(err);\n        };\n\n        // on database open success\n        request.onsuccess = function (e) {\n            // save a reference of the database to the `db` variable\n            db = request.result;\n            // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n            tx = db.transaction(storeName, 'readwrite');\n            // save a reference to that object store\n            store = tx.objectStore(storeName);\n\n            // in case of errors, let us know\n            db.onerror = function (err) {\n                console.log('error', err);\n            };\n\n            switch (method) {\n                case 'put':\n                    store.put(object);\n                    resolve(object);\n                    break;\n                case 'get':\n                    const all = store.getAll();\n                    all.onsuccess = function () {\n                        resolve(all.result);\n                    };\n                    break;\n                case 'delete':\n                    store.delete(object._id);\n                    break;\n                default:\n                    console.log('No valid method');\n                    break;\n            }\n\n            // when the transaction is complete, close the connection\n            tx.oncomplete = function () {\n                db.close();\n            };\n        }\n    });\n}","export const ADD_TO_WISHLIST = 'ADD_TO_WISHLIST';\nexport const ADD_MULTIPLE_TO_WISHLIST = 'ADD_MULTIPLE_TO_WISHLIST';\nexport const SORT_WISHLIST_ALPHABETICALLY = 'SORT_WISHLIST_ALPHABETICALLY';\nexport const SORT_WISHLIST_PRICE_ASC = 'SORT_WISHLIST_PRICE_ASC';\nexport const SORT_WISHLIST_PRICE_DESC = 'SORT_WISHLIST_PRICE_DESC';\nexport const UPDATE_WISHLIST_ITEM = 'UPDATE_WISHLIST_ITEM';\nexport const REMOVE_FROM_WISHLIST = 'REMOVE_FROM_WISHLIST';\n\nexport const ADD_TO_SECRET_LIST = 'ADD_TO_SECRET_LIST';\nexport const ADD_MULTIPLE_TO_SECRET_LIST = 'ADD_MULTIPLE_TO_SECRET_LIST';\nexport const UPDATE_SECRET_LIST_ITEM = 'UPDATE_SECRET_LIST_ITEM';\nexport const REMOVE_FROM_SECRET_LIST = 'REMOVE_FROM_SECRET_LIST';\n\nexport const ADD_TO_SHOPPING_LIST = 'ADD_TO_SHOPPING_LIST';\nexport const ADD_MULTIPLE_TO_SHOPPING_LIST = 'ADD_MULTIPLE_TO_SHOPPING_LIST';\nexport const UPDATE_SHOPPING_LIST_ITEM = 'UPDATE_SHOPPING_LIST_ITEM';\nexport const REMOVE_FROM_SHOPPING_LIST = 'REMOVE_FROM_SHOPPING_LIST';\n","import React, { useState } from \"react\";\nimport './add-item-form.css';\n\nimport { useDispatch } from 'react-redux'\nimport { idbPromise } from \"../../utils/idb\";\nimport { ADD_TO_SECRET_LIST, ADD_TO_WISHLIST } from \"../../utils/actions\";\n\nconst AddItemForm = () => {\n    const dispatch = useDispatch();\n\n    const [formState, setFormState]\n        = useState({\n            _id: '',\n            name: '',\n            link: '',\n            price: '',\n            specialNote: '',\n            isClaimed: false,\n            isClaimedBy: ''\n        });\n    let {\n        _id,\n        name,\n        link,\n        price,\n        specialNote,\n        isClaimed,\n        isClaimedBy\n    } = formState;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(formState);\n\n        dispatch({\n            type: ADD_TO_WISHLIST,\n            item: { ...formState }\n        });\n        idbPromise('wishlist', 'put', {\n            ...formState,\n            isClaimed: isClaimed,\n            isClaimedBy: isClaimedBy\n        });\n\n        dispatch({\n            type: ADD_TO_SECRET_LIST,\n            item: { ...formState }\n        });\n        idbPromise('secret list', 'put', {\n            ...formState,\n            isClaimed: isClaimed,\n            isClaimedBy: isClaimedBy\n        });\n\n    };\n\n    const handleChange = e => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    return (\n        <section>\n            <h2>Add an Item</h2>\n            <form\n                id='add-item-form'\n                onSubmit={handleSubmit}\n            >\n\n\n                {/* ================= FOR TESTING ONLY ================ */}\n                <div className=\"form-input\">\n                    <label htmlFor=\"_id\">ID:</label>\n                    <input\n                        type=\"text\"\n                        name=\"_id\"\n                        defaultValue={_id}\n                        onBlur={handleChange}\n                    />\n                </div>\n                {/* =================================================== */}\n\n                <div className=\"form-input\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        defaultValue={name}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"link\">Link:</label>\n                    <input\n                        type=\"text\"\n                        name=\"link\"\n                        defaultValue={link}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"price\">Price: $</label>\n                    <input\n                        type=\"number\"\n                        name=\"price\"\n                        defaultValue={`$${price}`}\n                        onBlur={handleChange}\n                    />\n                </div>\n                <div className=\"form-input\">\n                    <label htmlFor=\"specialNote\">Special Notes:</label>\n                    <textarea\n                        name=\"specialNote\"\n                        rows=\"5\"\n                        defaultValue={specialNote}\n                        onBlur={handleChange}\n                    />\n                </div>\n\n                <button type=\"submit\" data-testid=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </section>\n    );\n};\n\nexport default AddItemForm;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function formatUrl(url) {\n  return url\n    .replace(\"http://\", \"\")\n    .replace(\"https://\", \"\")\n    .replace(\"www.\", \"\")\n    .split(\"/\")[0]\n    .split(\"?\")[0];\n}\n\n","import React, { useState } from \"react\";\nimport ContentEditable from 'react-contenteditable';\nimport './wishlist-item.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    UPDATE_WISHLIST_ITEM,\n    UPDATE_SECRET_LIST_ITEM,\n    UPDATE_SHOPPING_LIST_ITEM,\n    REMOVE_FROM_WISHLIST,\n    REMOVE_FROM_SECRET_LIST,\n    REMOVE_FROM_SHOPPING_LIST\n} from '../../utils/actions';\nimport { formatUrl } from '../../utils/helpers';\n\nconst WishListItem = ({ item }) => {\n    let {\n        _id,\n        name,\n        price,\n        link,\n        specialNote\n    } = item;\n    const [isEditing, setIsEditing] = useState(false);\n    const { wishlist, secretList, shoppingList } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const {\n            currentTarget: {\n                dataset: { column },\n            },\n            target: { value }\n        } = e;\n\n        item = {\n            ...item,\n            [column]: value\n        };\n    };\n\n    const handleEdit = () => {\n        console.log(`editing ${name}...`)\n        setIsEditing(true);\n    }\n\n    const handleSave = (id) => {\n        const itemInWishlist = wishlist.find(item => item._id === id);\n        const itemInSecretList = secretList.find(item => item._id === id);\n        const itemInShoppingList = shoppingList.find(item => item._id === id);\n\n        // update item in wishlist\n        if (itemInWishlist) {\n            dispatch({\n                type: UPDATE_WISHLIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('wishlist', 'put', {\n                ...item\n            });\n        }\n\n        // update item in secret list\n        if (itemInSecretList) {\n            dispatch({\n                type: UPDATE_SECRET_LIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('secret list', 'put', {\n                ...item\n            });\n        }\n\n        // update item in shopping list\n        if (itemInShoppingList) {\n            dispatch({\n                type: UPDATE_SHOPPING_LIST_ITEM,\n                item: { ...item }\n            });\n            idbPromise('shopping list', 'put', {\n                ...item\n            });\n        }\n\n        setIsEditing(false);\n    }\n\n    const handleDelete = (id) => {\n        const itemInWishlist = wishlist.find(item => item._id === id);\n        const itemInShoppingList = shoppingList.find(item => item._id === id);\n\n        // remove from wishlist and secret list\n        if (itemInWishlist) {\n            dispatch({\n                type: REMOVE_FROM_WISHLIST,\n                item: { ...itemInWishlist }\n            });\n            idbPromise('wishlist', 'delete', {\n                ...itemInWishlist\n            });\n\n            dispatch({\n                type: REMOVE_FROM_SECRET_LIST,\n                item: { ...itemInWishlist }\n            });\n            idbPromise('secret list', 'delete', {\n                ...itemInWishlist\n            });\n        }\n\n        // remove from shopping list\n        if (itemInShoppingList) {\n            dispatch({\n                type: REMOVE_FROM_SHOPPING_LIST,\n                item: { ...itemInShoppingList }\n            });\n            idbPromise('shopping list', 'delete', {\n                ...itemInShoppingList\n            });\n        }\n\n        console.log(`${name} deleted!`)\n    };\n\n    if (isEditing) {\n        return (\n            <div className=\"container\">\n                <div className=\"wishlist-item\">\n\n                    <strong>\n                        <ContentEditable\n                            html={name}\n                            data-column='name'\n                            className='content-editable'\n                            onChange={handleChange}\n                        />\n                    </strong>\n\n                    <strong>\n                        <span>$\n                        <ContentEditable\n                                html={`${price}`}\n                                data-column='price'\n                                className='content-editable'\n                                onChange={handleChange}\n                            />\n                        </span>\n                    </strong>\n\n                    <ContentEditable\n                        html={link}\n                        data-column='link'\n                        className='content-editable'\n                        onChange={handleChange}\n                    />\n\n                    <ContentEditable\n                        html={specialNote}\n                        data-column='specialNote'\n                        className='content-editable'\n                        onChange={handleChange}\n                    />\n\n                    <div>\n                        <button onClick={() => handleSave(_id)}>Save</button>\n                        <button onClick={() => handleDelete(_id)}>Delete</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"wishlist-item\">\n\n                <h3>{name}</h3>\n\n                <h4>${price}</h4>\n\n                <a href={link} target='_blank' rel='noreferrer' className='item-link'>{formatUrl(link)}</a>\n\n                <p>{specialNote}</p>\n\n                <div>\n                    <button onClick={handleEdit}>Edit</button>\n                    <button onClick={() => handleDelete(_id)}>Delete</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WishListItem;","import React, { useEffect } from \"react\";\nimport './wishlist.css';\n\nimport AddItemForm from '../../components/AddItemForm/AddItemForm';\nimport WishListItem from '../../components/WishListItem/WishListItem';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    ADD_MULTIPLE_TO_WISHLIST,\n    SORT_WISHLIST_ALPHABETICALLY,\n    SORT_WISHLIST_PRICE_ASC,\n    SORT_WISHLIST_PRICE_DESC\n} from \"../../utils/actions\";\n\n\nconst WishList = () => {\n    const state = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getWishlist = async () => {\n            const wishlist = await idbPromise('wishlist', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_WISHLIST,\n                items: [...wishlist]\n            });\n        }\n\n        if (!state.wishlist.length) {\n            getWishlist();\n        }\n    }, [state.wishlist.length, dispatch]);\n\n    const sortAlphabetically = () => {\n        state.wishlist.sort((a, b) => {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n        });\n        \n        dispatch({\n            type: SORT_WISHLIST_ALPHABETICALLY,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    const sortPriceAscending = () => {\n        state.wishlist.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n\n        dispatch({\n            type: SORT_WISHLIST_PRICE_ASC,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    const sortPriceDescending = () => {\n        state.wishlist.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n\n        dispatch({\n            type: SORT_WISHLIST_PRICE_DESC,\n            wishlist: [state.wishlist]\n        });\n    };\n\n    return (\n        <div className=\"container\">\n\n            {/* ======= FOR TESTING ONLY ========================== */}\n            <h2 className='text-green'>Wishlist</h2>\n            {/* ==================================================== */}\n\n\n            <AddItemForm />\n\n\n            {state.wishlist.length ? (\n                <div>\n                    <button onClick={sortAlphabetically}>Sort Alphabetically</button>\n                    <button onClick={sortPriceAscending}>Sort Price Asc</button>\n                    <button onClick={sortPriceDescending}>Sort Price Desc</button>\n\n                    {state.wishlist.map(item => (\n                        <WishListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <span role='img' aria-label='gift'>\n                        🎁\n                            </span>\n                            Add items to your wishlist if you want gifts\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default WishList;","import React from \"react\";\nimport './secret-list-item.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport { ADD_TO_SHOPPING_LIST, UPDATE_SECRET_LIST_ITEM } from '../../utils/actions';\nimport { formatUrl } from '../../utils/helpers';\n\nconst SecretListItem = ({ item }) => {\n    const state = useSelector(state => state);\n    const { shoppingList } = state;\n    const dispatch = useDispatch();\n    let {\n        _id,\n        name,\n        price,\n        link,\n        specialNote,\n        isClaimed,\n        isClaimedBy\n    } = item;\n\n    const handleClaimGift = () => {\n        const itemInShoppingList = shoppingList.find(item => item._id === _id);\n\n        if (itemInShoppingList) return;\n        else {\n            isClaimed = true;\n    // --- CHANGE TO FRIEND'S USERNAME ---------\n            isClaimedBy = 'Me';\n    // ---------------------------------------\n\n            dispatch({\n                type: ADD_TO_SHOPPING_LIST,\n                item: {\n                    ...item,\n                    isClaimed: isClaimed,\n                    isClaimedBy: isClaimedBy\n                }\n            });\n\n            idbPromise('shopping list', 'put', {\n                ...item,\n                isClaimed: isClaimed,\n                isClaimedBy: isClaimedBy\n            });\n\n            dispatch({\n                type: UPDATE_SECRET_LIST_ITEM,\n                item: {\n                    ...item,\n                    isClaimed: isClaimed,\n                    isClaimedBy: isClaimedBy\n                }\n            });\n\n            idbPromise('secret list', 'put', {\n                ...item,\n                isClaimed: isClaimed,\n                isClaimedBy: isClaimedBy\n            });\n        }\n    };\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"secret-list-item\">\n                <h3>\n                    {name}\n                    <span> ${price}</span>\n                </h3>\n                <a href={link}>{formatUrl(link)}</a>\n                <p>{specialNote}</p>\n\n                {/* ======= COME BACK TO THIS WHEN FRIEND FUNCTIONALITY IN PLACE ====== */}\n                {isClaimed ? (\n                    <div>\n                        Claimed by: {isClaimedBy}\n                    </div>\n                ) : (\n                    <div>\n                        <button\n                            id=\"claim-gift\"\n                            onClick={handleClaimGift}\n                        >\n                            Claim Gift\n                        </button>\n                    </div>\n                )}\n                {/* =================================================================== */}\n\n            </div>\n        </div>\n    );\n};\n\nexport default SecretListItem;","import React, { useState, useEffect } from \"react\";\nimport './secret-list.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport {\n    ADD_MULTIPLE_TO_SECRET_LIST\n} from \"../../utils/actions\";\n\nimport SecretListItem from '../../components/SecretListItem/SecretListItem';\n\nconst SecretList = () => {\n    // getting the secret list\n    const secretList = useSelector(state => state.secretList);\n\n    const dispatch = useDispatch();\n\n    // if filtering, we'll render a filtered list\n    const [filteredList, setFilteredList] = useState(secretList);\n    const [isFiltering, setIsFiltering] = useState(false);\n    // parameters for filtering\n    const [minPrice, setMinPrice] = useState(0);\n    const [maxPrice, setMaxPrice] = useState(500);\n\n    useEffect(() => {\n        const getSecretList = async () => {\n            // this will get secret list if offline\n            const idbSecretList = await idbPromise('secret list', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_SECRET_LIST,\n                items: [...idbSecretList]\n            });\n        }    \n\n        if (!secretList.length) {\n            getSecretList();\n        }\n    }, [secretList.length, dispatch]);\n\n    const handleFilterChange = e => {\n        setFilteredList(secretList);\n        setIsFiltering(true);\n\n        let {\n            currentTarget: {\n                dataset: { column },\n            },\n            target: { value }\n        } = e;\n\n        if (column === 'minPrice') setMinPrice(parseInt(value));\n        if (column === 'maxPrice') setMaxPrice(parseInt(value));\n\n        const priceFilteredList = secretList.filter(item => {\n            return item.price >= minPrice && item.price <= maxPrice;\n        });\n\n        setFilteredList(priceFilteredList);\n    };\n\n    // reset filters\n    const stopFiltering = () => {\n        setIsFiltering(false);\n        setMinPrice(0);\n        setMaxPrice(100);\n        setFilteredList(secretList);\n    };\n\n    const chooseRandomGift = async () => {\n        setIsFiltering(true);\n\n        // console logs before and after the filter function return the same filteredList\n        setFilteredList(secretList);\n        console.log(filteredList);\n        setFilteredList(secretList.filter(item => item.price >= minPrice && item.price <= maxPrice));\n        console.log(filteredList);\n\n        // random function\n        const randomGift = filteredList[Math.floor(Math.random() * filteredList.length)];\n        console.log(randomGift);\n\n        // array with only randomGift inside\n        setFilteredList([randomGift]);\n    };\n\n    return (\n        <div className=\"container\">\n\n            {/* ======= FOR TESTING ONLY ========================== */}\n            <h2 className='text-green'>Secret List</h2>\n            {/* ==================================================== */}\n\n            <div>\n                <label htmlFor='minPrice'>Min Price: $</label>\n                <input\n                    type='number'\n                    min='0'\n                    max={maxPrice}\n                    name='minPrice'\n                    data-column='minPrice'\n                    value={minPrice}\n                    onChange={handleFilterChange}\n                    onFocus={handleFilterChange}\n                    onBlur={handleFilterChange}\n                />\n            </div>\n            <div>\n                <label htmlFor='maxPrice'>Max Price: $</label>\n                <input\n                    type='number'\n                    min={minPrice}\n                    name='maxPrice'\n                    data-column='maxPrice'\n                    value={maxPrice}\n                    onChange={handleFilterChange}\n                    onFocus={handleFilterChange}\n                    onBlur={handleFilterChange}\n                />\n            </div>\n            <button onClick={stopFiltering}>Clear Filters</button>\n            <button \n                onClick={() => {\n                    // this looks crazy because we may need to add another function...\n                    chooseRandomGift();\n                }}\n            >\n                Select Random Gift!\n            </button>\n\n            {isFiltering ? (\n                // if isFiltering render this\n                <div>\n                    {filteredList.map(item => (\n                        <SecretListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                // else render this\n                <div>\n                    {\n                        secretList.length ? (\n                            <div>\n                                {secretList.map(item => (\n                                    <SecretListItem key={item._id} item={item} />\n                                ))}\n                            </div>\n                        ) : (\n                            <div>\n                                This user has everything they want!\n                                <span role='img' aria-label='smiley'>\n                                    😃\n                                </span>\n                            </div>\n                        )\n                    }\n                </div>\n            )}\n\n\n        </div>\n    );\n};\n\nexport default SecretList;\n","import React from \"react\";\nimport './shopping-list-item.css';\n\nimport { formatUrl } from '../../utils/helpers';\n\nconst ShoppingListItem = ({ item }) => {\n    const {\n        name,\n        price,\n        link,\n        specialNote\n    } = item;\n\n    return (\n        <div className=\"container\">\n            <div className=\"wishlist-item\">\n                <h3>\n                    {name}\n                    <span> ${price}</span>\n                </h3>\n                <a href={link}>{formatUrl(link)}</a>\n                <p>{specialNote}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ShoppingListItem;","import React, { useEffect } from \"react\";\nimport './shopping-list.css';\n\nimport ShoppingListItem from \"../../components/ShoppingListItem/ShoppingListItem\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { idbPromise } from '../../utils/idb';\nimport { ADD_MULTIPLE_TO_SHOPPING_LIST } from \"../../utils/actions\";\n\nconst ShoppingList = () => {\n    const state = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const getShoppingList = async () => {\n            const shoppingList = await idbPromise('shopping list', 'get');\n            dispatch({\n                type: ADD_MULTIPLE_TO_SHOPPING_LIST,\n                items: [...shoppingList]\n            });\n        }\n\n        if (!state.shoppingList.length) {\n            getShoppingList();\n        }\n    }, [state.shoppingList.length, dispatch]);\n\n    \n\n    return (\n        <div className=\"container\">\n\n    {/* ======= FOR TESTING ONLY ========================== */}\n                <h2 className='text-green'>Shopping List</h2>\n    {/* ==================================================== */}\n\n                        \n            {state.shoppingList.length ? (\n                <div>\n                    {state.shoppingList.map(item => (\n                        <ShoppingListItem key={item._id} item={item} />\n                    ))}\n                </div>\n            ) : (\n                <div>\n                    <span role='img' aria-label='relief'>\n                        😌\n                    </span>\n                    Feels good to have the shopping done...\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default ShoppingList;\n","import React from \"react\";\n\nimport WishList from '../WishList/WishList';\nimport SecretList from '../SecretList/SecretList';\nimport ShoppingList from \"../ShoppingList/ShoppingList\";\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n\n\n            {/* =============== FOR TESTING PURPOSES ================= */}\n            <WishList />\n            <SecretList />\n            <ShoppingList />\n            {/* ====================================================== */}\n\n\n        </div>\n    );\n};\n\nexport default Home;\n","import {\n    ADD_TO_WISHLIST,\n    ADD_MULTIPLE_TO_WISHLIST,\n    SORT_WISHLIST_ALPHABETICALLY,\n    SORT_WISHLIST_PRICE_ASC,\n    SORT_WISHLIST_PRICE_DESC,\n    UPDATE_WISHLIST_ITEM,\n    REMOVE_FROM_WISHLIST,\n\n    ADD_TO_SECRET_LIST,\n    ADD_MULTIPLE_TO_SECRET_LIST,\n    UPDATE_SECRET_LIST_ITEM,\n    REMOVE_FROM_SECRET_LIST,\n\n    ADD_TO_SHOPPING_LIST,\n    ADD_MULTIPLE_TO_SHOPPING_LIST,\n    UPDATE_SHOPPING_LIST_ITEM,\n    REMOVE_FROM_SHOPPING_LIST\n} from './actions';\n\nconst initialState = {\n    wishlist: [],\n    secretList: [],\n    shoppingList: []\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // ============ WISHLIST CASES START ===================================================\n        case ADD_TO_WISHLIST:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_WISHLIST:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, ...action.items]\n            };\n        \n        case SORT_WISHLIST_ALPHABETICALLY:\n            let abcWishlist = state.wishlist.sort((a, b) => {\n                if (a.name < b.name) return -1;\n                if (a.name > b.name) return 1;\n                return 0;\n            });\n\n            return {\n                ...state,\n                wishlist: abcWishlist\n            }\n\n        case SORT_WISHLIST_PRICE_ASC:\n            let priceAscWishlist = state.wishlist.sort((a, b) => {\n                return parseFloat(a.price) - parseFloat(b.price);\n            });\n\n            return {\n                ...state,\n                wishlist: priceAscWishlist\n            };\n\n        case SORT_WISHLIST_PRICE_DESC:\n            let priceDescWishlist = state.wishlist.sort((a, b) => {\n                return parseFloat(b.price) - parseFloat(a.price);\n            });\n\n            return {\n                ...state,\n                wishlist: priceDescWishlist\n            };\n\n        case UPDATE_WISHLIST_ITEM:\n            return {\n                ...state,\n                wishlist: [...state.wishlist, action.item]\n            };\n\n        case REMOVE_FROM_WISHLIST:\n            let newWishlist = state.wishlist.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                wishlist: newWishlist\n            };\n        // ============ WISHLIST CASES END =======================================================\n\n        // ============= SECRET LIST CASES START =====================================================\n        case ADD_TO_SECRET_LIST:\n            return {\n                ...state,\n                secretList: [...state.secretList, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_SECRET_LIST:\n            return {\n                ...state,\n                secretList: [...action.items]\n            };\n\n        case UPDATE_SECRET_LIST_ITEM:\n            return {\n                ...state,\n                secretList: [...state.secretList, action.item]\n            };\n\n        case REMOVE_FROM_SECRET_LIST:\n            let newSecretList = state.secretList.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                secretList: newSecretList\n            };\n        // ============ SECRET LIST CASES END =======================================================\n\n        // =========== SHOPPING LIST CASES START =================================================\n        case ADD_TO_SHOPPING_LIST:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, action.item]\n            };\n\n        case ADD_MULTIPLE_TO_SHOPPING_LIST:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, ...action.items]\n            };\n\n        case UPDATE_SHOPPING_LIST_ITEM:\n            return {\n                ...state,\n                shoppingList: [...state.shoppingList, action.item]\n            };\n\n        case REMOVE_FROM_SHOPPING_LIST:\n            let newShoppingList = state.shoppingList.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                shoppingList: newShoppingList\n            };\n        // =========== SHOPPING LIST CASES END ========================================================\n\n        // if it's none of these actions, do not update the state at all and keep things the same!\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n  \nexport default store;","import React from 'react';\nimport './css/style.css';\nimport {Link} from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to='/sign-up' className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n  );\n};","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/style.css';\nimport { Button } from '../Button';\n\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if(window.innerWidth <= 960) {\n            setButton(false)\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className = \"navbar\">\n                <div className = \"navbar-container\">\n                    <Link to ='/' className = \"navbar-logo\" onClick = {closeMobileMenu}>\n                        Wish-List &nbsp;\n                        <i class=\"fas fa-gift\"/>\n                    </Link>\n                    <div className = \"menu-icon\" onClick = {handleClick}>\n                        <i className = {click ? 'fas fa-times' : 'fas fa-bars'} />\n                    </div>\n                    <ul className = {click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className = 'nav-item'>\n                            <Link to ='/' className = 'nav-links' onClick = {closeMobileMenu}>\n                                Home\n                            </Link>\n                        </li>\n                        <li className = 'nav-item'>\n                            <Link to ='/dashboard' className = 'nav-links' onClick = {closeMobileMenu}>\n                                Dashboard\n                            </Link>\n                        </li>\n                        <li className = 'nav-item'>\n                            <Link to ='/sign-up' className = 'nav-links-mobile' onClick = {closeMobileMenu}>\n                                Sign-Up\n                            </Link>\n                        </li>\n                    </ul>\n                    {button && <Button buttonStyle = 'btn--outline'> SIGNUP </Button>}\n                </div>\n\n            </nav>\n        </>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport Home from \"./pages/Home/Home\";\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\nimport Navbar from './components/Navbar';\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n"],"sourceRoot":""}